// Generated by delombok at Tue Jun 29 20:53:44 EDT 2021
package com.baeldung.lombok.builder;

final class ImmutableClient {
    private final int id;
    private final String name;

    @SuppressWarnings("all")
    public ImmutableClient(final int id, final String name) {
        this.id = id;
        this.name = name;
    }

    @SuppressWarnings("all")
    public int getId() {
        return this.id;
    }

    @SuppressWarnings("all")
    public String getName() {
        return this.name;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof ImmutableClient)) return false;
        final ImmutableClient other = (ImmutableClient) o;
        if (this.getId() != other.getId()) return false;
        final Object this$name = this.getName();
        final Object other$name = other.getName();
        if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
        return true;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getId();
        final Object $name = this.getName();
        result = result * PRIME + ($name == null ? 43 : $name.hashCode());
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "ImmutableClient(id=" + this.getId() + ", name=" + this.getName() + ")";
    }
}
