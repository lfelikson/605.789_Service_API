// Generated by delombok at Tue Jun 29 20:53:44 EDT 2021
package com.baeldung.lombok.builder.inheritance.superbuilder;

public class Parent {
    private final String parentName;
    private final int parentAge;


    @SuppressWarnings("all")
    public static abstract class ParentBuilder<C extends Parent, B extends ParentBuilder<C, B>> {
        @SuppressWarnings("all")
        private String parentName;
        @SuppressWarnings("all")
        private int parentAge;

        @SuppressWarnings("all")
        protected B $fillValuesFrom(final C instance) {
            ParentBuilder.$fillValuesFromInstanceIntoBuilder(instance, this);
            return self();
        }

        @SuppressWarnings("all")
        private static void $fillValuesFromInstanceIntoBuilder(final Parent instance, final ParentBuilder<?, ?> b) {
            b.parentName(instance.parentName);
            b.parentAge(instance.parentAge);
        }

        @SuppressWarnings("all")
        protected abstract B self();

        @SuppressWarnings("all")
        public abstract C build();

        @SuppressWarnings("all")
        public B parentName(final String parentName) {
            this.parentName = parentName;
            return self();
        }

        @SuppressWarnings("all")
        public B parentAge(final int parentAge) {
            this.parentAge = parentAge;
            return self();
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "Parent.ParentBuilder(parentName=" + this.parentName + ", parentAge=" + this.parentAge + ")";
        }
    }


    @SuppressWarnings("all")
    private static final class ParentBuilderImpl extends ParentBuilder<Parent, ParentBuilderImpl> {
        @SuppressWarnings("all")
        private ParentBuilderImpl() {
        }

        @Override
        @SuppressWarnings("all")
        protected ParentBuilderImpl self() {
            return this;
        }

        @Override
        @SuppressWarnings("all")
        public Parent build() {
            return new Parent(this);
        }
    }

    @SuppressWarnings("all")
    protected Parent(final ParentBuilder<?, ?> b) {
        this.parentName = b.parentName;
        this.parentAge = b.parentAge;
    }

    @SuppressWarnings("all")
    public static ParentBuilder<?, ?> builder() {
        return new ParentBuilderImpl();
    }

    @SuppressWarnings("all")
    public ParentBuilder<?, ?> toBuilder() {
        return new ParentBuilderImpl().$fillValuesFrom(this);
    }

    @SuppressWarnings("all")
    public String getParentName() {
        return this.parentName;
    }

    @SuppressWarnings("all")
    public int getParentAge() {
        return this.parentAge;
    }
}
