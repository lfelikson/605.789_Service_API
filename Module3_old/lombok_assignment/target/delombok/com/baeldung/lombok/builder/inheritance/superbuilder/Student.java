// Generated by delombok at Tue Jun 29 20:53:44 EDT 2021
package com.baeldung.lombok.builder.inheritance.superbuilder;

public class Student extends Child {
    private final String schoolName;


    @SuppressWarnings("all")
    public static abstract class StudentBuilder<C extends Student, B extends StudentBuilder<C, B>> extends Child.ChildBuilder<C, B> {
        @SuppressWarnings("all")
        private String schoolName;

        @Override
        @SuppressWarnings("all")
        protected B $fillValuesFrom(final C instance) {
            super.$fillValuesFrom(instance);
            StudentBuilder.$fillValuesFromInstanceIntoBuilder(instance, this);
            return self();
        }

        @SuppressWarnings("all")
        private static void $fillValuesFromInstanceIntoBuilder(final Student instance, final StudentBuilder<?, ?> b) {
            b.schoolName(instance.schoolName);
        }

        @Override
        @SuppressWarnings("all")
        protected abstract B self();

        @Override
        @SuppressWarnings("all")
        public abstract C build();

        @SuppressWarnings("all")
        public B schoolName(final String schoolName) {
            this.schoolName = schoolName;
            return self();
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "Student.StudentBuilder(super=" + super.toString() + ", schoolName=" + this.schoolName + ")";
        }
    }


    @SuppressWarnings("all")
    private static final class StudentBuilderImpl extends StudentBuilder<Student, StudentBuilderImpl> {
        @SuppressWarnings("all")
        private StudentBuilderImpl() {
        }

        @Override
        @SuppressWarnings("all")
        protected StudentBuilderImpl self() {
            return this;
        }

        @Override
        @SuppressWarnings("all")
        public Student build() {
            return new Student(this);
        }
    }

    @SuppressWarnings("all")
    protected Student(final StudentBuilder<?, ?> b) {
        super(b);
        this.schoolName = b.schoolName;
    }

    @SuppressWarnings("all")
    public static StudentBuilder<?, ?> builder() {
        return new StudentBuilderImpl();
    }

    @SuppressWarnings("all")
    public StudentBuilder<?, ?> toBuilder() {
        return new StudentBuilderImpl().$fillValuesFrom(this);
    }

    @SuppressWarnings("all")
    public String getSchoolName() {
        return this.schoolName;
    }
}
