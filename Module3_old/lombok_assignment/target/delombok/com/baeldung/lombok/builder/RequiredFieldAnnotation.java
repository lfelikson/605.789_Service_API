// Generated by delombok at Tue Jun 29 20:53:44 EDT 2021
package com.baeldung.lombok.builder;

import lombok.NonNull;

public class RequiredFieldAnnotation {
    @NonNull
    String name;
    String description;

    public static RequiredFieldAnnotationBuilder builder(String name) {
        return internalBuilder().name(name);
    }

    @SuppressWarnings("all")
    RequiredFieldAnnotation(@NonNull final String name, final String description) {
        if (name == null) {
            throw new NullPointerException("name is marked non-null but is null");
        }
        this.name = name;
        this.description = description;
    }


    @SuppressWarnings("all")
    public static class RequiredFieldAnnotationBuilder {
        @SuppressWarnings("all")
        private String name;
        @SuppressWarnings("all")
        private String description;

        @SuppressWarnings("all")
        RequiredFieldAnnotationBuilder() {
        }

        @SuppressWarnings("all")
        public RequiredFieldAnnotationBuilder name(@NonNull final String name) {
            if (name == null) {
                throw new NullPointerException("name is marked non-null but is null");
            }
            this.name = name;
            return this;
        }

        @SuppressWarnings("all")
        public RequiredFieldAnnotationBuilder description(final String description) {
            this.description = description;
            return this;
        }

        @SuppressWarnings("all")
        public RequiredFieldAnnotation build() {
            return new RequiredFieldAnnotation(name, description);
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "RequiredFieldAnnotation.RequiredFieldAnnotationBuilder(name=" + this.name + ", description=" + this.description + ")";
        }
    }

    @SuppressWarnings("all")
    public static RequiredFieldAnnotationBuilder internalBuilder() {
        return new RequiredFieldAnnotationBuilder();
    }

    @NonNull
    @SuppressWarnings("all")
    public String getName() {
        return this.name;
    }

    @SuppressWarnings("all")
    public String getDescription() {
        return this.description;
    }
}
