// Generated by delombok at Tue Jun 29 20:53:44 EDT 2021
package com.baeldung.lombok.builder.inheritance.superbuilder;

public class Child extends Parent {
    private final String childName;
    private final int childAge;


    @SuppressWarnings("all")
    public static abstract class ChildBuilder<C extends Child, B extends ChildBuilder<C, B>> extends Parent.ParentBuilder<C, B> {
        @SuppressWarnings("all")
        private String childName;
        @SuppressWarnings("all")
        private int childAge;

        @Override
        @SuppressWarnings("all")
        protected B $fillValuesFrom(final C instance) {
            super.$fillValuesFrom(instance);
            ChildBuilder.$fillValuesFromInstanceIntoBuilder(instance, this);
            return self();
        }

        @SuppressWarnings("all")
        private static void $fillValuesFromInstanceIntoBuilder(final Child instance, final ChildBuilder<?, ?> b) {
            b.childName(instance.childName);
            b.childAge(instance.childAge);
        }

        @Override
        @SuppressWarnings("all")
        protected abstract B self();

        @Override
        @SuppressWarnings("all")
        public abstract C build();

        @SuppressWarnings("all")
        public B childName(final String childName) {
            this.childName = childName;
            return self();
        }

        @SuppressWarnings("all")
        public B childAge(final int childAge) {
            this.childAge = childAge;
            return self();
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "Child.ChildBuilder(super=" + super.toString() + ", childName=" + this.childName + ", childAge=" + this.childAge + ")";
        }
    }


    @SuppressWarnings("all")
    private static final class ChildBuilderImpl extends ChildBuilder<Child, ChildBuilderImpl> {
        @SuppressWarnings("all")
        private ChildBuilderImpl() {
        }

        @Override
        @SuppressWarnings("all")
        protected ChildBuilderImpl self() {
            return this;
        }

        @Override
        @SuppressWarnings("all")
        public Child build() {
            return new Child(this);
        }
    }

    @SuppressWarnings("all")
    protected Child(final ChildBuilder<?, ?> b) {
        super(b);
        this.childName = b.childName;
        this.childAge = b.childAge;
    }

    @SuppressWarnings("all")
    public static ChildBuilder<?, ?> builder() {
        return new ChildBuilderImpl();
    }

    @SuppressWarnings("all")
    public ChildBuilder<?, ?> toBuilder() {
        return new ChildBuilderImpl().$fillValuesFrom(this);
    }

    @SuppressWarnings("all")
    public String getChildName() {
        return this.childName;
    }

    @SuppressWarnings("all")
    public int getChildAge() {
        return this.childAge;
    }
}
